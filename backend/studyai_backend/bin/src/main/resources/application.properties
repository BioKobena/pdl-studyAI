spring.application.name=studyai-backend
# Connexion MongoDB via variable d'environnement MONGO_URI (fallback local)
# spring.data.mongodb.uri=${MONGO_URI:mongodb://localhost:27017/studyai}
spring.data.mongodb.uri=mongodb+srv://fulbsossa16_db_user:LZnOK0DIS75p01TO@cluster0.qu7xkv0.mongodb.net/studyai
spring.data.mongodb.database=studyai
server.port=${PORT:8085}

# mongodb+srv://fulbsossa16_db_user:LZnOK0DIS75p01TO@cluster0.qu7xkv0.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

# Logging
logging.level.org.springframework=INFO

# Swagger/OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui

# Configuration Google Gemini

spring.ai.vertex.ai.gemini.project-id=gen-lang-client-0102049857
spring.ai.vertex.ai.gemini.location=us-central1                       # exemple de localisation
spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.5-flash
spring.ai.vertex.ai.gemini.chat.options.temperature=0.5
spring.ai.vertex.ai.gemini.credentials-uri=classpath:gen-lang-client.json
# Api key for studyAI : 

# curl "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" \
#   -H 'Content-Type: application/json' \
#   -H 'X-goog-api-key: AIzaSyC3sjKXvYcr6ZE2oulXpKai31uG6R4Olp0' \
#   -X POST \
#   -d '{
#     "contents": [
#       {
#         "parts": [
#           {
#             "text": "Explain how AI works in a few words"
#           }
#         ]
#       }
#     ]
#   }'